@using Business.Helpers
@model ResetPasswordViewModel



<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">

    <style>
        html, body {
            height: 100%;
            margin: 0;
            display: flex;
            flex-direction: column;
        }

        body {
            background-image: url('/img/resetpasw.jpg');
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
            padding-bottom: 70px;
        }

        .login-container {
            flex: 1;
            background-color: whitesmoke;
            padding: 40px;
            border-radius: 10px;
            box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.2);
            max-width: 500px;
            margin: auto;
            margin-top: 100px;
        }

        h3 {
            text-align: center;
            margin-bottom: 30px;
        }

        footer {
            position: fixed;
            bottom: 3px;
            left: 0;
            width: 100%;
            background-color: floralwhite;
            text-align: start;
            padding: 20px 0 20px 100px;
            font-size: 16px;
            text-align: center;
        }
    </style>

</head>
<body>

    @{
        var currentLanguage = Context.Session.GetString("Language") ?? "tr";
    }

    <div class="d-flex justify-content-end mb-3">
        <div class="dropdown">
            <!-- Shows chosen button -->
            <button class="btn btn-secondary dropdown-toggle d-flex align-items-center" type="button" id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                @if (currentLanguage == "tr")
                {
                    <img src="/img/turkish_flag.jpg" style="width:30px; height:20px; margin-right:5px;" />
                    <div>
                        Türkçe
                    </div>
                }
                else if (currentLanguage == "en")
                {
                    <img src="/img/usa_eng_flag.jpg" style="width:30px; height:20px; margin-right:5px;" />
                    <div>
                        English
                    </div>
                }
                else if (currentLanguage == "de")
                {
                    <img src="/img/german_flag.jpg" style="width:30px; height:20px; margin-right:5px;" />
                    <div>
                        Deutsch
                    </div>
                }
            </button>

            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="languageDropdown">
                <!-- Türkçe -->
                <li>
                    <form method="post" asp-controller="Login" asp-action="ChangeLanguage">
                        <button type="submit" name="language" value="tr" class="dropdown-item d-flex align-items-center">
                            <img src="/img/turkish_flag.jpg" style="width:30px; height:20px; margin-right:5px;" />
                            Türkçe
                        </button>
                    </form>
                </li>
                <!-- English -->
                <li>
                    <form method="post" asp-controller="Login" asp-action="ChangeLanguage">
                        <button type="submit" name="language" value="en" class="dropdown-item d-flex align-items-center">
                            <img src="/img//usa_eng_flag.jpg" style="width:30px; height:20px; margin-right:5px;" />
                            English
                        </button>
                    </form>
                </li>
                <!-- Deutsch -->
                <li>
                    <form method="post" asp-controller="Login" asp-action="ChangeLanguage">
                        <button type="submit" name="language" value="de" class="dropdown-item d-flex align-items-center">
                            <img src="/img/german_flag.jpg" style="width:30px; height:20px; margin-right:5px;" />
                            Deutsch
                        </button>
                    </form>
                </li>
            </ul>
        </div>
    </div>
    
    <div class="container login-container">
        <h3>
            <i class="bi bi-key-fill fs-3 text-dark mb-2"></i>
            @LocalizationCache.Get("Reset Password")
        </h3>
        <br />
        <form id="resetPasswordForm">
            <input type="hidden" id="Id" name="Id" value="@Model.Id" />
            <input type="hidden" id="Token" name="Token" value="@Model.Token" />

            <div class="form-group col-md-10 py-1">
                <label for="NewPassword">@LocalizationCache.Get("New Password")</label>
                <div class="position-relative">
                    <input type="password" class="form-control" id="NewPassword" name="NewPassword" placeholder="@LocalizationCache.Get("Enter new password")">
                <i class="bi bi-eye-fill fs-4" id="togglePassword"
                   style="cursor:pointer; position:absolute; right:10px; top:50%; transform:translateY(-50%);">
                </i>
                </div>
                <div class="progress mt-2" style="height: 18px;">
                    <div id="passwordStrength" class="progress-bar"></div>
                </div>
                <small id="strengthText" class="form-text"></small>
            </div>

            <div class="form-group col-md-10 py-1">
                <label for="ConfirmPassword">@LocalizationCache.Get("Confirm Password")</label>
                <div class="position-relative">
                    <input type="password" class="form-control" id="ConfirmPassword" name="ConfirmPassword" placeholder="@LocalizationCache.Get("Re-enter new password")">
                <i class="bi bi-eye-fill fs-4" id="toggleRepeatPassword"
                   style="cursor:pointer; position:absolute; right:10px; top:50%; transform:translateY(-50%);">
                </i>
                </div>
            </div>

            <br />
            <button type="button" class="btn btn-primary" id="submitReset">
                @LocalizationCache.Get("Save")
            </button>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>

        const passwordInput = document.querySelector('#NewPassword');
        const confirmPasswordInput = document.querySelector('#ConfirmPassword');
        const togglePassword = document.querySelector('#togglePassword');
        const toggleRepeatPassword = document.querySelector('#toggleRepeatPassword');
        const strengthBar = document.querySelector('#passwordStrength');
        const strengthText = document.querySelector('#strengthText');

        // Şifre Gücü Hesaplama
        passwordInput.addEventListener("input", function () {
            const value = passwordInput.value;

            if (value.length === 0) {
                strengthBar.style.width = "0";
                strengthBar.className = "progress-bar";
                strengthBar.textContent = "";
                strengthText.textContent = "";
                return;
            }

            let strength = 0;
            if (value.length >= 6) strength++;
            if (/[A-Z]/.test(value)) strength++;
            if (/[0-9]/.test(value)) strength++;
            if (/[^A-Za-z0-9]/.test(value)) strength++;
            if (value.length >= 12) strength++;

            const categories = [
                { text: "@Html.Raw(LocalizationCache.Get("Very Weak"))", color: "bg-danger", width: "20%" },
                { text: "@Html.Raw(LocalizationCache.Get("Weak"))", color: "bg-warning", width: "40%" },
                { text: "@Html.Raw(LocalizationCache.Get("Medium"))", color: "bg-info", width: "60%" },
                { text: "@Html.Raw(LocalizationCache.Get("Strong"))", color: "bg-primary", width: "80%" },
                { text: "@Html.Raw(LocalizationCache.Get("Very Strong"))", color: "bg-success", width: "100%" }
            ];


            const current = categories[Math.min(strength, 4)];
            strengthBar.className = "progress-bar " + current.color;
            strengthBar.style.width = current.width;
            strengthBar.textContent = current.text;
            strengthText.textContent = "@Html.Raw(LocalizationCache.Get("Password Strength: "))" + " " + current.text;
        });

        // Toggle Password
        togglePassword.addEventListener('click', function () {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            this.classList.toggle('bi-eye-fill');
            this.classList.toggle('bi-eye-slash-fill');
        });

        // Toggle Confirm Password
        toggleRepeatPassword.addEventListener('click', function () {
            const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            confirmPasswordInput.setAttribute('type', type);
            this.classList.toggle('bi-eye-fill');
            this.classList.toggle('bi-eye-slash-fill');
        });

        // Language switch
        $('#languageDropdown').change(function () {
            var selectedLanguage = $(this).val();
            $.ajax({
                url: '@Url.Action("ChangeLanguage", "Login")',
                type: 'POST',
                data: { language: selectedLanguage },
                success: function () {
                    location.reload();
                },
                error: function () {
                    alert("@Html.Raw(LocalizationCache.Get("Language change failed."))");
                }
            });
        });

        $("#submitReset").click(function () {
            var model = {
                Id: $("#Id").val(),
                Token: $("#Token").val(),
                NewPassword: $("#NewPassword").val(),
                ConfirmPassword: $("#ConfirmPassword").val()
            };

            if (model.NewPassword !== model.ConfirmPassword) {
                alert("@Html.Raw(LocalizationCache.Get("Passwords do not match!"))");
                return;
            }

            $.ajax({
                url: "@Url.Action("ResetPassword", "Login")",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(model),
                success: function () {
                    alert("@Html.Raw(LocalizationCache.Get("Password has been successfully updated!"))"); 
                    window.location.href = "/Login/Loginn"; 
                },
                error: function (xhr, status, error) {
                    alert("@Html.Raw(LocalizationCache.Get("New password cannot be the same as the old password!"))"); 
                    console.log(error);
                }
            });
        });
    </script>
</body>
</html>